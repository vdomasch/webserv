  server {
  listen 8080;
  host 127.0.0.1;                     
  server_name test;                   # specify Server_name, need to be added into /etc/Hosts to work
  error_page 404 /errors/404.html;     # default error_page
  client_max_body_size 1024;          # max request body size in bytes
  root docs/fusion_web/;              # Root folder of site directory, full or relative path, mandatory parameter
  index index.html;                   # default page when requesting a directory, Index.html by default

  location /tours {          
    	Root server_files/web;			# Root folder of the location, if not specified, taken from the server. 
			autoindex on;							 # turn on/off directory listing
			allow_methods POST GET;		 # allowed methods in location, GET only by default
			index index.html;				# default page when requesting a directory, copies Root Index by default
			# return abc/index1.html;		 # redirection
			alias docs/fusion_web;		 # replaces location part of URI. 
	}

	location cgi-bin {
			Root ./;																								 # cgi-bin location, mandatory parameter
			cgi_path /usr/bin/python3 /bin/bash;										 # location of interpreters installed on the current system, mandatory parameter
			cgi_ext .py .sh;																				 # extensions for executable files, mandatory parameter
	}
}


----------------------------------------------------------------------


The inet_addr() function shall convert the string pointed to by cp, in the standard IPv4 dotted decimal notation, to an integer value suitable for use as an Internet address.


Useless if select()?
Look for data reading to read with poll : 
struct pollfd poll[3] -> pollfd[0].events = POLLIN or POLLOUT for looking for a socket to write without blocking
	                    ->  pollfd[0].fd = [fd we want to monitor]